services:
  db:
    image: postgres
    container_name: ${POSTGRES_DOMAIN_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    networks:
      - network-api
  api:
    build: .
    depends_on:
      db:
        condition: service_healthy
    restart: always
    container_name: api
    environment:
      DB_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_DOMAIN_NAME}/${POSTGRES_DB}
    ports:
      - '80:8000'
    networks:
      - network-api
networks:
  network-api:
    driver: bridge
